{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\metho\\\\Desktop\\\\Progetti L-31\\\\Esami\\\\Cloud Computing\\\\Progetto-Cloud-Computing\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\n// Registra gli elementi di Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // URL API dal file .env\n  const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\n\n  // Effettua una richiesta all'API per ottenere i dati\n  useEffect(() => {\n    axios.get(`${API_URL}/api/posts`).then(response => setData(response.data)).catch(error => console.error(\"Errore nel recuperare i dati dall'API:\", error));\n  }, [API_URL]);\n\n  // Prepara i dati per il grafico\n  const chartData = {\n    labels: data.map(item => item.platform || \"Unknown Platform\"),\n    datasets: [{\n      label: \"Likes\",\n      data: data.map(item => item.likes),\n      backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n      borderColor: \"rgba(75, 192, 192, 1)\",\n      borderWidth: 1\n    }, {\n      label: \"Comments\",\n      data: data.map(item => item.comments),\n      backgroundColor: \"rgba(153, 102, 255, 0.6)\",\n      borderColor: \"rgba(153, 102, 255, 1)\",\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Social Media Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"auto\"\n      },\n      children: data.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Caricamento dei dati in corso...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","App","_s","data","setData","API_URL","process","env","REACT_APP_API_URL","get","then","response","catch","error","console","chartData","labels","map","item","platform","datasets","label","likes","backgroundColor","borderColor","borderWidth","comments","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","length","_c","$RefreshReg$"],"sources":["C:/Users/metho/Desktop/Progetti L-31/Esami/Cloud Computing/Progetto-Cloud-Computing/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\n// Registra gli elementi di Chart.js\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  // URL API dal file .env\r\n  const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\r\n\r\n  // Effettua una richiesta all'API per ottenere i dati\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_URL}/api/posts`)\r\n      .then((response) => setData(response.data))\r\n      .catch((error) =>\r\n        console.error(\"Errore nel recuperare i dati dall'API:\", error)\r\n      );\r\n  }, [API_URL]);\r\n\r\n  // Prepara i dati per il grafico\r\n  const chartData = {\r\n    labels: data.map((item) => item.platform || \"Unknown Platform\"),\r\n    datasets: [\r\n      {\r\n        label: \"Likes\",\r\n        data: data.map((item) => item.likes),\r\n        backgroundColor: \"rgba(75, 192, 192, 0.6)\",\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: \"Comments\",\r\n        data: data.map((item) => item.comments),\r\n        backgroundColor: \"rgba(153, 102, 255, 0.6)\",\r\n        borderColor: \"rgba(153, 102, 255, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Social Media Dashboard</h1>\r\n      <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n        {data.length > 0 ? (\r\n          <Bar data={chartData} />\r\n        ) : (\r\n          <p>Caricamento dei dati in corso...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,aAAa,EACbC,WAAW,EACXC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEzE,MAAMK,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMiB,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;EAExE;EACArB,SAAS,CAAC,MAAM;IACdE,KAAK,CACFoB,GAAG,CAAC,GAAGJ,OAAO,YAAY,CAAC,CAC3BK,IAAI,CAAEC,QAAQ,IAAKP,OAAO,CAACO,QAAQ,CAACR,IAAI,CAAC,CAAC,CAC1CS,KAAK,CAAEC,KAAK,IACXC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAC/D,CAAC;EACL,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMU,SAAS,GAAG;IAChBC,MAAM,EAAEb,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,IAAI,kBAAkB,CAAC;IAC/DC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdlB,IAAI,EAAEA,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC;MACpCC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACf,CAAC,EACD;MACEJ,KAAK,EAAE,UAAU;MACjBlB,IAAI,EAAEA,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACQ,QAAQ,CAAC;MACvCH,eAAe,EAAE,0BAA0B;MAC3CC,WAAW,EAAE,wBAAwB;MACrCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,oBACE1B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BhC,OAAA;MAAKiC,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAP,QAAA,EAC1CxB,IAAI,CAACgC,MAAM,GAAG,CAAC,gBACdpC,OAAA,CAACF,GAAG;QAACM,IAAI,EAAEY;MAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAExBhC,OAAA;QAAA4B,QAAA,EAAG;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACvC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAjDID,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAmDT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}